# Lists {#sec-list}

Lists are objects in R that bring together elements of different modes (for example character, numeric or logical vectors or even matrices or arrays) into the same object. Lists are created using the `list()` function which doesn't have any particular arguments required. Instead, the name of each element is given as well as what this element should be - this could be a vector, a matrix or an array.

For example, we could save information about the movie Titanic in a list using the following code.

::: panel-tabset
## R Code

```{r list1.1, eval = FALSE}
titanic <- list(director = "James Cameron",
                actors = c("Leonardo DiCaprio", "Kate Winslet"),
                runtime = "3 hours 14 minutes",
                release.date = "23/01/1998",
                budget = 200000000,
                gross.profit = 2222985568,
                production.companies = c("Twentieth Century Fox",
                                         "Paramount Pictures",
                                         "Lightstorm Entertainment"))
titanic
```

## Output

```{r list1.2, echo = FALSE}
titanic <- list(director = "James Cameron",
                actors = c("Leonardo DiCaprio", "Kate Winslet"),
                runtime = "3 hours 14 minutes",
                release.date = "23/01/1998",
                budget = 200000000,
                gross.profit = 2222985568,
                production.companies = c("Twentieth Century Fox",
                                         "Paramount Pictures",
                                         "Lightstorm Entertainment"))
titanic
```
:::

The elements of a list can be accessed using either double square brackets `[[ ]]`, or the `$` operator (when the elements are named). For example, if we wanted to extract the release date from `titanic`, then we can use any of the following code.

::: panel-tabset
## R Code

```{r list2.1.1, eval = FALSE}
titanic[["release.date"]]
```

## Output

```{r list2.1.2, echo = FALSE}
titanic[["release.date"]]
```
:::

::: panel-tabset
## R Code

```{r list2.2.1, eval = FALSE}
titanic[[4]]
```

## Output

```{r list2.2.2, echo = FALSE}
titanic[[4]]
```
:::

::: panel-tabset
## R Code

```{r list2.3.1, eval = FALSE}
titanic$release.date
```

## Output

```{r list2.3.2, echo = FALSE}
titanic$release.date
```
:::

We could also be more specific and extract a particular entry from one of the elements of the list using single square brackets, `[ ]`, after the double square brackets or `$` operator. For example, if we wanted to know who the second billed actor is, then we can use any of the following lines of code.

::: panel-tabset
## R Code

```{r list3.1.1, eval = FALSE}
titanic[["actors"]][2]
```

## Output

```{r list3.1.2, echo = FALSE}
titanic[["actors"]][2]
```
:::

::: panel-tabset
## R Code

```{r list3.2.1, eval = FALSE}
titanic[[2]][2]
```

## Output

```{r list3.2.2, echo = FALSE}
titanic[[2]][2]
```
:::

::: panel-tabset
## R Code

```{r list3.3.1, eval = FALSE}
titanic$actors[2]
```

## Output

```{r list3.3.2, echo = FALSE}
titanic$actors[2]
```
:::

If you are unsure of the names of all of the elements of a list, then the `names()` function is useful.

::: panel-tabset
## R Code

```{r list4.1, eval = FALSE}
names(titanic)
```

## Output

```{r list4.2, echo = FALSE}
names(titanic)
```
:::

------------------------------------------------------------------------

You can see other examples of how lists can be used in [Section 1.9.4 Lists](https://read.kortext.com/reader/pdf/92741/29){target="_blank"} of *Probability and Statistics with R*.
