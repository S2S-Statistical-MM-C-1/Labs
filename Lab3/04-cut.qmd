# `cut()` {#sec-cut}

```{r read1, echo = FALSE}
chol <- read.table(file = "Data/chol.txt", header = TRUE, fileEncoding = 'UTF-8-BOM')
chol$gender <- factor(x = chol$gender, levels = c("female", "male"))
chol$smoke <- factor(x = chol$smoke, levels = c("no", "ex-smoker", "current"))
measurements <- read.csv(file = "Data/measurements.csv", fileEncoding = 'UTF-8-BOM')
chol_full <- cbind(chol, measurements)
chol_full$bmi <- chol_full$weight/(chol_full$height)^2
subject <- data.frame(id = "P461", ldl = 148, hdl = 78, trig = 120, age = 41, gender = "male", smoke = "current",
                      weight = 84.05, height = 1.79)
subject$bmi <- subject$weight/(subject$height)^2
chol_full <- rbind(chol_full, subject)
```

For numeric variables in a data frame, it can sometimes be useful to split the values into intervals and create a new factor with numerical levels. For example, if we wanted to identify high, mid and low levels of `hdl` in `chol_full`.

The function that can do this in R is `cut()`. The arguments that `cut()` takes are:

* `x =`: this is the numeric variable that you want to split into different levels.
* `breaks =`: this is the number of levels you want to split the numeric vector into.
* `include.lowest =`: this takes the values `TRUE` or `FALSE`, indicating whether the lowest value in the numeric variable should be included in the first level. By default this is set to `FALSE` so this smallest value is not included.

We can split `hdl` into three levels using the following code.

::: panel-tabset
## R Code
```{r data28.1, eval = FALSE}
cut(x = chol_full$hdl, breaks = 3, include.lowest = TRUE)
```

## Output
```{r data28.2, echo = FALSE}
cut(x = chol_full$hdl, breaks = 3, include.lowest = TRUE)
```
:::

This tells us that the lowest level is the range [24.9, 55.7], the middle level is (55.7, 86.3] and the highest level is (86.3, 117]. We can also see which level each row falls into, the first two rows being in the low level for `hdl`, the third row being in the middle level and so on.

We can then add this as a new factor variable, `hdl_level`, and represent each level with the labels `"low"`, `"mid"` and `"high"` using the code below.

::: panel-tabset
## R Code
```{r data29.1, eval = FALSE}
chol_full$hdl_level <- factor(cut(x = chol_full$hdl, breaks = 3, include.lowest = TRUE),
                              labels = c("low", "mid", "high"))

head(chol_full)
```

## Output
```{r data29.2, echo = FALSE}
chol_full$hdl_level <- factor(cut(x = chol_full$hdl, breaks = 3, include.lowest = TRUE),
                              labels = c("low", "mid", "high"))

head(chol_full)
```
:::


