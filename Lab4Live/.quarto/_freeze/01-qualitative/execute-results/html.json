{
  "hash": "2e9bd56153e0edd757b284ad1a6bd1c2",
  "result": {
    "engine": "knitr",
    "markdown": "# Qualitative Data {#sec-qual}\n\n\n\n\n\nQualitative data is the term used when a variable has different categories or groups or levels. This could be things such as students' grades, the genders of patients in an experiment or which treatment subjects have been given. There are several ways that qualitative data can be summarised and presented.\n\n---\n\nDetails on summarising univariate qualitative data and creating suitable graphical displays are also covered in [Section 2.3 Displaying Qualitative Data](https://read.kortext.com/reader/pdf/92741/98){target=\"_blank\"} in *Probability and Statistics with R*.\n\n\n## Tables {#sec-tables}\n\nFrequency tables summarise qualitative data by showing the different groups/categories in a variable and the corresponding frequency with which they occur - that is, how many observations fall into each category.\n\nFrequency tables can be created in R using the `table()` function. We have already seen `table()` used in [Lab 3](https://moodle.gla.ac.uk/pluginfile.php/9073238/mod_resource/content/2/02-data.html#summarising-data){target=\"_blank\"}, but let's revisit it with an example.\n\nThe data set `EPIDURAL` from the package `PASWR2` contains information on 85 patients from a study used to determine whether administering epidural anesthesia (a pain relief administered in the back) to pregnant women in labour is better whilst they are in the traditional sitting position, or when they are in a \"hamstring stretch\" position. This contains several variables relating to each patient and the treatment they receive (to see more about what each of these variables describes, run the code `help(\"EPIDURAL\")`).\n\nWe can load the data frame into our **Environment** tab and look at the first five rows using the following code (make sure you have installed the `PASWR2` package on whatever device you are using R with beforehand).\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(PASWR2)\n\ndata(\"EPIDURAL\")\nhead(EPIDURAL)\n```\n:::\n\n\n## Output\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n  doctor  kg  cm       ease           treatment oc complications\n1  Dr. B 116 172  Difficult Traditional Sitting  0          None\n2  Dr. C  86 176       Easy   Hamstring Stretch  0          None\n3  Dr. B  72 157  Difficult Traditional Sitting  0          None\n4  Dr. B  63 169       Easy   Hamstring Stretch  2          None\n5  Dr. B 114 163 Impossible Traditional Sitting  0          None\n6  Dr. B 121 163  Difficult   Hamstring Stretch  3          None\n```\n\n\n:::\n:::\n\n:::\n\nThe variable `ease` is a factor variable which tells how easy the physician found it to locate where the epidural anesthesia should be administered for each patient. It has levels `\"Easy\"`, `\"Difficult\"` and `\"Impossible\"`.\n\nWe can summarise the number of patients that fall into each level of the `ease` variable using the `table()` function as follows.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nepi_freq <- table(EPIDURAL$ease)\nepi_freq\n```\n:::\n\n\n## Output\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n\n Difficult       Easy Impossible \n        20         57          8 \n```\n\n\n:::\n:::\n\n:::\n\nThis frequency table shows us that there are 57 patients in the data set for whom it was easy to administer the anesthetic, 20 who it was difficult for and 8 for whom it was impossible to find where to administer the anesthetic.\n\n:::{.question}\n::::{.question-header}\nTask\n::::\n::::{.question-container}\nThe levels of `ease` are automatically presented in alphabetical order. Can you reorder the labels so that they go in the order `\"Easy\"`, `\"Difficult\"` and `\"Impossible\"`?\n\n\n<div class='webex-solution'><button>Hint</button>\n\nYou will need to use the function `factor()` and the argument `levels =` in order to reorder the levels of a factor. You can look back at [Lab 2](https://moodle.gla.ac.uk/pluginfile.php/9073095/mod_resource/content/3/02-data.html#sec-fact){target=\"_blank\"} to remind yourself how to use the `factor()` function.\n\n</div>\n\n\n<!--\n\n<div class='webex-solution'><button>Solution</button>\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nEPIDURAL$ease <- factor(x = EPIDURAL$ease,\n                        levels = c(\"Easy\", \"Difficult\", \"Impossible\"))\nlevels(EPIDURAL$ease)\n```\n:::\n\n\n## Output\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Easy\"       \"Difficult\"  \"Impossible\"\n```\n\n\n:::\n:::\n\n:::\n\nThe function `levels()` can be used to see the levels of a factor variable, as well as the order they are stored in.\n\nWe can update the frequency table `epi_freq` so that the different levels of `ease` now appear in a sensible order.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nepi_freq <- table(EPIDURAL$ease)\nepi_freq\n```\n:::\n\n\n## Output\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n\n      Easy  Difficult Impossible \n        57         20          8 \n```\n\n\n:::\n:::\n\n:::\n\n</div>\n\n-->\n::::\n:::\n\nWe could also create a table showing the proportion of the total number of patients which fall into each level of `ease` using `prop.table()`. We need to make sure that we give a pre-existing table to this function. We can use the table `epi_freq` created above.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nepi_prop <- prop.table(epi_freq)\nepi_prop\n```\n:::\n\n\n## Output\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n\n      Easy  Difficult Impossible \n0.67058824 0.23529412 0.09411765 \n```\n\n\n:::\n:::\n\n:::\n\nNow we can see that it was easy to find where to administer the anesthetic for roughly 67% of patients, difficult for roughly 24% and impossible for 9% of patients.\n\n:::{.question}\n::::{.question-header}\nTask\n::::\n::::{.question-container}\nThe `TITANIC3` data set from the `PASWR2` package contains information on the survival status of passengers on the Titanic. Load this data set into your Environment tab and create a frequency table showing the number of passengers who survived and the number who did not.\n\nRemember to explore the data set using the `help()` and `str()` functions. It might help to rename the levels of the `survived` variable so they are clear.\n\n<!--\n\n<div class='webex-solution'><button>Solution</button>\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(\"TITANIC3\")\n\nTITANIC3$survived <- factor(x = TITANIC3$survived, labels = c(\"No\", \"Yes\"))\n\ntable(TITANIC3$survived)\n```\n:::\n\n\n## Output\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n\n No Yes \n809 500 \n```\n\n\n:::\n:::\n\n:::\n\n</div>\n\n-->\n::::\n:::\n\n:::{.question}\n::::{.question-header}\nTask\n::::\n::::{.question-container}\nWhat proportion of passengers survived the Titanic sinking?\n<!--\n<input class='webex-solveme nospaces' size='8' data-answer='[\"0.4\",\"0.38\",\"0.382\",\"0.3820\",\"0.38197\",\"0.381971\"]'/>\n\n\n<div class='webex-solution'><button>Solution</button>\n\nWe can find the proportion of survivors by using the `prop.table()` function.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nprop.table(table(TITANIC3$survived))\n```\n:::\n\n\n## Output\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n\n      No      Yes \n0.618029 0.381971 \n```\n\n\n:::\n:::\n\n:::\n\n</div>\n\n-->\n::::\n:::\n\n---\n\nSee [Section 2.3.1 Tables](https://read.kortext.com/reader/pdf/92741/98){target=\"_blank\"} of *Probability and Statistics with R* to read more about presenting qualitative data in frequency and proportion tables.\n\n\n## Barplots {#sec-bars}\n\nBarplots are a way to graphically summarise qualitative data. You will most likely have seen many barplots before, but now we're going to learn how to create our own.\n\nThe function used to create barplots in R is `barplot()`. It takes the following arguments:\n\n* `height =`: this is the vector or matrix which contains a summary of the qualitative data; this could be a frequency table or a table of proportions.\n* `col =`: this is a vector of colours to be used for the bars in the barplot. If you want to see a list of colour names that R can use, run the code `colors()` - there are also documents online which will show you the actual colours too!\n* `main =`: this is the main title of the plot.\n* `xlab =`: this is a label for along the x-axis.\n* `ylab =`: this is a label for along the y-axis.\n* `ylim =`: this is a vector giving the limits that the y-axis should be spread over.\n\nThe only essential argument to give to `barplot()` is `height =`. For a full list of the arguments that can be used within `barplot()`, use the code `help(\"barplot\")`.\n\nWe can create a barplot showing the number of patients from `EPIDURAL` that fall into each level of `ease` using the following code.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(height = epi_freq,\n        col = c(\"darkslategray\", \"darkslategray4\", \"darkslategray3\"),\n        main = \"Ease of Locating Anesthesia Administering Location in Patients\",\n        xlab = \"Ease\",\n        ylab = \"Frequency\")\n```\n:::\n\n\n## Plots\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-qualitative_files/figure-html/qual4.2-1.png){width=672}\n:::\n:::\n\n:::\n\nWe can also use the table of proportions `epi_prop` to create a barplot, this time showing the proportion of patients in each level of ease, rather than the frequency.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(height = epi_prop,\n        col = c(\"darkslategray\", \"darkslategray4\", \"darkslategray3\"),\n        main = \"Ease of Locating Anesthesia Administering Location in Patients\",\n        xlab = \"Ease\",\n        ylab = \"Proportion\")\n```\n:::\n\n\n## Plots\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-qualitative_files/figure-html/qual5.2-1.png){width=672}\n:::\n:::\n\n:::\n\nNotice that the shapes of both these barplots are identical. The only difference between them is the scale used on the y-axis.\n\n:::{.question}\n::::{.question-header}\nTask\n::::\n::::{.question-container .webex-check}\nComplete the code below to create a barplot which shows the number of passengers on the Titanic belonging to 1^st^, 2^nd^ and 3^rd^ class respectively.\n\n::: panel-tabset\n## R Code\n\n::: {.webex-code}\n<input class='webex-solveme nospaces' size='7' data-answer='[\"barplot\"]'/>`(`<input class='webex-solveme nospaces' size='6' data-answer='[\"height\"]'/>` = table(TITANIC3$pclass),`\n<ul style=\"margin-top: 0em; margin-left: 3em;\">\n`col = c(\"gray32\", \"gray95\", \"seashell3\"),`\n</ul>\n<ul style=\"margin-top: -0.9em; margin-left: 3em;\">\n<input class='webex-solveme nospaces' size='4' data-answer='[\"main\"]'/>` = \"Number of Titanic Passengers in each Class\",`\n</ul>\n<ul style=\"margin-top: -0.9em; margin-left: 3em;\">\n`xlab = `<input class='webex-solveme nospaces' size='7' data-answer='[\"\\\"Class\\\"\"]'/>`,`\n`ylab = \"Frequency\")`\n</ul>\n:::\n\n## Plots\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-qualitative_files/figure-html/qual-ans4.2-1.png){width=672}\n:::\n:::\n\n:::\n\n<!--\n\n<div class='webex-solution'><button>Solution</button>\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(height = table(TITANIC3$pclass),\n        col = c(\"gray32\", \"gray95\", \"seashell3\"),\n        main = \"Number of Titanic Passengers in each Class\",\n        xlab = \"Class\",\n        ylab = \"Frequency\")\n```\n:::\n\n\n## Plots\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-qualitative_files/figure-html/qual-ans4.2_null-1.png){width=672}\n:::\n:::\n\n:::\n\n</div>\n\n-->\n::::\n:::\n\n---\n\nYou can see further examples of creating barplots in R in [Section 2.3.2 Barplots](https://read.kortext.com/reader/pdf/92741/100){target=\"_blank\"} of *Probability and Statistics with R*.\n\n\n\n## Dot Charts {#sec-dots}\n\nDot charts show similar information to barplots and summarise qualitative data. They show a dot for each level of a categorical variable which indicates the frequency of that level (see below for an example).\n\nDot charts can be made in R using the function `dotchart()`. This takes similar arguments to those used by `barplot()` above, including:\n\n* `x =`: this is the vector or matrix which contains a summary of the qualitative data; this could be a frequency table or a table of proportions.\n* `bg =`: this is the colour to be used inside the dot.\n\nAgain, the only essential argument to provide is `x =`.\n\nWe can create a dot chart showing the number of patients from `EPIDURAL` in each level of `ease` using the following code.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\ndotchart(x = epi_freq,\n         bg = c(\"darkslategray\", \"darkslategray4\", \"darkslategray3\"),\n         main = \"Ease of Locating Anesthesia Administering Location in Patients\",\n         xlab = \"Frequency\",\n         ylab = \"Ease\")\n```\n:::\n\n\n## Plots\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-qualitative_files/figure-html/qual6.2-1.png){width=672}\n:::\n:::\n\n:::\n\n---\n\nSee [Section 2.3.3 Dot Charts](https://read.kortext.com/reader/pdf/92741/100){target=\"_blank\"} of *Probability and Statistics with R* to learn more about constructing these plots.\n\n\n## Pie Charts {#sec-pies}\n\nA third way to graphically present qualitative data is with a pie chart. These show the relative frequencies of different levels of a categorical variable as proportions of a \"pie\".\n\nPie charts are sometimes not favoured by statisticians because it can be difficult to clearly see the differences in proportions when they are very similar. Pie charts can still be used though to show the proportion of observations in a category, in relation to the total number of observations.\n\nThe function used to create pie charts is `pie()`, which takes the following arguments:\n\n* `x =`: this is the vector which summarises the qualitative data as frequencies or proportions.\n* `radius =`: this determines the size of the pie chart within your plotting window.\n* `col =`: this is a vector of colours which are to be used for each \"slice\" of the pie chart.\n\nYou can see a full list of the arguments that can be given to the `pie()` function using `help(\"pie\")`. The only necessary argument to provide is `x =`.\n\nWe can create a pie chart showing the proportion of patients in each level of `ease` using the code below.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\npie(x = epi_prop,\n    radius = 0.9,\n    col = c(\"darkslategray\", \"darkslategray4\", \"darkslategray3\"),\n    main = \"Ease of Locating Anesthesia Administering Location in Patients\")\n```\n:::\n\n\n## Plots\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-qualitative_files/figure-html/qual7.2-1.png){width=672}\n:::\n:::\n\n:::\n\n:::{.question}\n::::{.question-header}\nTask\n::::\n::::{.question-container .webex-check}\nCreate a pie chart showing the proportion of passengers on the Titanic in each class.\n\n::: panel-tabset\n## R Code\n::: {.webex-code}\n<input class='webex-solveme nospaces' size='3' data-answer='[\"pie\"]'/>`(x = table(TITANIC3$`<select class='webex-select'><option value='blank'></option><option value=''>class</option><option value='answer'>pclass</option><option value=''>survived</option><option value=''>sex</option></select>`),`\n\n<ul style=\"margin-top: -0.8em; margin-left: 1em;\">\n`col = c(\"gray32\", \"gray95\", \"seashell3\"),`\n</ul>\n<ul style=\"margin-top: -0.8em; margin-left: 1.4em;\">\n<input class='webex-solveme nospaces' size='4' data-answer='[\"main\"]'/>`= \"Class of Titanic Passengers\")`\n</ul>\n:::\n\n## Plot\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-qualitative_files/figure-html/qual-ans5.2-1.png){width=672}\n:::\n:::\n\n:::\n\n<!--\n\n<div class='webex-solution'><button>Solution</button>\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\npie(x = table(TITANIC3$pclass),\n    col = c(\"gray32\", \"gray95\", \"seashell3\"),\n    main = \"Class of Titanic Passengers\")\n```\n:::\n\n\n## Plots\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-qualitative_files/figure-html/qual-ans5.2_null-1.png){width=672}\n:::\n:::\n\n:::\n\n</div>\n\n-->\n::::\n:::\n\n---\n\n[Section 2.3.4 Pie Charts](https://read.kortext.com/reader/pdf/92741/103){target=\"_blank\"} of *Probability and Statistics with R* gives additional examples of constructing pie charts.\n\n\n## Bivariate Data {#sec-bi}\n\nSo far, we have looked at different ways to visualise information about one categorical (or qualitative) variable. Because only one variable has been considered, it is called univariate data.\n\nWe will now turn our attention to bivariate categorical data. This means we will look at ways to visualise information about two categorical variables at the same time. We can expand upon some of the methods we have already learned to allow two categorical variables to be considered.\n\nIn @sec-tables we looked at the use of the `table()` function to create frequency tables for one categorical variable. We can expand upon the use of this function so that frequency tables of two categorical variables can be created. These are known as two-way contingency tables.\n\nIn order to create a two-way contingency table, simply provide the second categorical variable you wish to use as an additional argument.\n\nThe data set `EPIDURAL` contains a variable `doctor` which indicates the physician (`\"Dr. A\"`, `\"Dr. B\"`, `\"Dr. C\"` or `\"Dr. D\"`) who administered the epidural anesthesia. @tbl-contingency shows the number of patients who fall into each level of the `doctor` and `ease` variables.\n\n\n::: {#tbl-contingency .cell tbl-cap='Two-way contingency table of `Doctor` by `Ease`.'}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\">   </th>\n   <th style=\"text-align:right;\"> Easy </th>\n   <th style=\"text-align:right;\"> Difficult </th>\n   <th style=\"text-align:right;\"> Impossible </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;\"> Dr. A </td>\n   <td style=\"text-align:right;\"> 19 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 1 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;\"> Dr. B </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;\"> Dr. C </td>\n   <td style=\"text-align:right;\"> 18 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n   <td style=\"text-align:right;\"> 0 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;font-weight: bold;\"> Dr. D </td>\n   <td style=\"text-align:right;\"> 13 </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 3 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\nWe can recreate @tbl-contingency in R using the following code.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nepi_tab <- table(EPIDURAL$doctor, EPIDURAL$ease)\nepi_tab\n```\n:::\n\n\n## Output\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n       \n        Easy Difficult Impossible\n  Dr. A   19         3          1\n  Dr. B    7        10          4\n  Dr. C   18         3          0\n  Dr. D   13         4          3\n```\n\n\n:::\n:::\n\n:::\n\n:::{.question}\n::::{.question-header}\nTask\n::::\n::::{.question-container}\nCreate a two-way contingency table showing the number of passengers who survived and did not survive in each of the three classes (1^st^, 2^nd^ and 3^rd^).\n\n<!--\n\n<div class='webex-solution'><button>Solution</button>\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(TITANIC3$pclass, TITANIC3$survived)\n```\n:::\n\n\n## Output\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n     \n       No Yes\n  1st 123 200\n  2nd 158 119\n  3rd 528 181\n```\n\n\n:::\n:::\n\n:::\n\n</div>\n\n-->\n::::\n:::\n\n:::{.question}\n::::{.question-header}\nTask\n::::\n::::{.question-container}\nHow many 3^rd^ class passengers survived the sinking of the Titanic?\n<!--<input class='webex-solveme nospaces' size='3' data-answer='[\"181\"]'/>-->\n::::\n:::\n\nBarplots are a useful tool to present the information from a two-way contingency table graphically. For example, we can produce a barplot, which shows the same counts as in @tbl-contingency, using the following code.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(height = epi_tab,\n        legend.text = TRUE,\n        col = c(\"seashell\", \"rosybrown2\", \"thistle\", \"snow4\"),\n        main = \"Number of patients treated by each physician in each level of Ease\",\n        xlab = \"Ease\",\n        ylab = \"Frequency\")\n```\n:::\n\n\n## Plots\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-qualitative_files/figure-html/qual9.2-1.png){width=672}\n:::\n:::\n\n:::\n\nThis code uses the `barplot()` function introduced in @sec-bars and provides the two-way contingency table `epi_tab` to the argument `height =`. This means that all the values in this table will be used to construct the height of the bars. Because the bars for each doctor are on top of each other, this is known as a \"stacked\" barplot.\n\nThe argument `legend.text = TRUE` has also been included so that a legend, indicating the different physicians, is included in the plot.\n\nIf we instead wanted to produce a barplot where there is a separate bar for each doctor within each level of the `ease` variable, then we need to include the argument `beside = TRUE`.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(height = epi_tab,\n        legend.text = TRUE,\n        beside = TRUE,\n        col = c(\"seashell\", \"rosybrown2\", \"thistle\", \"snow4\"),\n        main = \"Number of patients treated by each physician in each level of Ease\",\n        xlab = \"Ease\",\n        ylab = \"Frequency\")\n```\n:::\n\n\n## Plots\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-qualitative_files/figure-html/qual10.2-1.png){width=672}\n:::\n:::\n\n:::\n\nAnother option for presenting this information would be to create a barplot where the different doctors are along the x-axis and the levels of `ease` are used to create the individual bars. In order to do this, we need to transpose the two-way contingency table that is given to the `height =` argument in the `barplot()` function.\n\nTransposing a table can easily be achieved using the function `t()`. The only argument needed is the table you wish to transpose.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nt(epi_tab)\n```\n:::\n\n\n## Output\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n            \n             Dr. A Dr. B Dr. C Dr. D\n  Easy          19     7    18    13\n  Difficult      3    10     3     4\n  Impossible     1     4     0     3\n```\n\n\n:::\n:::\n\n:::\n\nWe can then create the following barplots using the transposed `epi_tab` table.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(height = t(epi_tab),\n        legend.text = TRUE,\n        col = c(\"darkslategray\", \"darkslategray3\", \"darkslategray4\"),\n        main = \"Number of patients treated by each physician in each level of Ease\",\n        xlab = \"Doctor\",\n        ylab = \"Frequency\")\n```\n:::\n\n\n## Plots\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-qualitative_files/figure-html/qual12.1.2-1.png){width=672}\n:::\n:::\n\n:::\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(height = t(epi_tab),\n        legend.text = TRUE,\n        beside = TRUE,\n        col = c(\"darkslategray\", \"darkslategray3\", \"darkslategray4\"),\n        main = \"Number of patients treated by each physician in each level of Ease\",\n        xlab = \"Doctor\",\n        ylab = \"Frequency\")\n```\n:::\n\n\n## Plots\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-qualitative_files/figure-html/qual12.2.2-1.png){width=672}\n:::\n:::\n\n:::\n\nIt is often better to present relationships using proportions, rather than counts. In order to calculate the proportions (either out of the total number of observations, row totals or column totals) from a two-way contingency table, we can use the function `prop.table()`.\n\nTo create a barplot which shows the proportion of patients who were in each level of the `ease` variable out of the total number of patients seen by a given doctor, we would first need to calculate these proportions in `epi_tab`. This can be done by using the argument `margin = 1` within the `prop.table()` function.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nepi_prop_tab <- prop.table(x = epi_tab, margin = 1)\nepi_prop_tab\n```\n:::\n\n\n## Output\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n       \n              Easy  Difficult Impossible\n  Dr. A 0.82608696 0.13043478 0.04347826\n  Dr. B 0.33333333 0.47619048 0.19047619\n  Dr. C 0.85714286 0.14285714 0.00000000\n  Dr. D 0.65000000 0.20000000 0.15000000\n```\n\n\n:::\n:::\n\n:::\n\nNow we can see, for example, that Dr. A found it easy to feel the bone landmarks of 82.6% of their patients, found it difficult in 13.0% of their patients and impossible in 4.3% of their patients.\n\nWe can graphically present these proportions for all doctors in a barplot using the following code. Because the proportions are calculated out of the total number of patients each doctor has seen, it makes sense to plot the physicians along the x-axis.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nbarplot(height = t(epi_prop_tab),\n        legend.text = TRUE,\n        beside = TRUE,\n        col = c(\"darkslategray\", \"darkslategray3\", \"darkslategray4\"),\n        main = \"Proportion of doctor's patients in each level of Ease variable\",\n        xlab = \"Doctor\",\n        ylab = \"Proportion\")\n```\n:::\n\n\n## Plots\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-qualitative_files/figure-html/qual14.2-1.png){width=672}\n:::\n:::\n\n:::\n\n:::{.question}\n::::{.question-header}\nTask\n::::\n::::{.question-container}\nCreate the following barplot showing the proportion of passengers in each class who survived and the proportion who did not.\n\n::: panel-tabset\n## Plots\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-qualitative_files/figure-html/qual-ans7.0-1.png){width=672}\n:::\n:::\n\n:::\n\n<!--\n\n<div class='webex-solution'><button>Solution</button>\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nsurv_prop <- prop.table(table(TITANIC3$pclass, TITANIC3$survived), margin = 1)\n\nbarplot(height = t(surv_prop),\n        legend.text = TRUE,\n        beside = TRUE,\n        main = \"Proportion of Passengers Surviving the Titanic Sinking in each Class\",\n        xlab = \"Class\",\n        ylab = \"Proportion\")\n```\n:::\n\n\n## Plots\n\n::: {.cell}\n::: {.cell-output-display}\n![](01-qualitative_files/figure-html/qual-ans7.2-1.png){width=672}\n:::\n:::\n\n:::\n\n</div>\n\n-->\n::::\n:::\n\n---\n\nTo learn more about presenting bivariate qualitative data, see Sections [2.7.1 Two-Way Contingency Tables](https://read.kortext.com/reader/pdf/92741/134){target=\"_blank\"} and [2.7.2 Graphical Representations of Two-Way Contingency Tables](https://read.kortext.com/reader/pdf/92741/136){target=\"_blank\"} of *Probability and Statistics with R*.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "supporting": [
      "01-qualitative_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}