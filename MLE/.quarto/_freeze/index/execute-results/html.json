{
  "hash": "13528dd2dd9b18cfc79c38a34219e6bf",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Bernoulli Distribution (Example 7.18)\"\nnumber-sections: true\n---\n\n\n\n```{=html}\n<!-- question callout example\n:::{.question}\n::::{.question-header}\nQuestion\n::::\n::::{.question-container}\nThis is where the question text would go.\n::::\n:::\n-->\n```\n\n````{=html}\n<!--\n::: panel-tabset\n## R Code\n::: {.cell}\n\n:::\n\n## Output\n::: {.cell}\n\n:::\n:::\n-->\n````\n\n\nA laboratory is interested in testing a new child-friendly pesticide on *Blatta orientalis* (oriental cockroaches). The scientists from the lab apply the new pesticide to 81 randomly selected *Blatta orientalis oothecae* (eggs).\n\nThe results from the experiment are stored in the data frame `ROACHEGGS`, from the `PASWR2` package, in the variable `eggs`. A 0 indicates that nothing hatched from the egg, while a 1 indicates the birth of a cockroach.\n\nAssuming the selected eggs are representative of the population of *Blatta orientalis* eggs, estimate the proportion of *Blatta orientalis* eggs that result in a birth, after being sprayed with the child-friendly pesticide.\n\n**Solution**\n\nWe can start by reading in the data and saving it as an object called `eggs`.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(PASWR2)\n\neggs <- ROACHEGGS$eggs\n```\n:::\n\n:::\n\n\nWhether or not a *Blatta orientalis* egg hatches is a Bernoulli trial with unknown parameter $\\pi$. That is, $X\\sim\\mbox{Bernoulli}(\\pi)$, where $X$ is the value 0, indicating that nothing hatched from the egg, or 1, indicating the birth of a cockroach.\n\nWe want to use the data from `ROACHEGGS`, as well as this Bernoulli distribution to find a **maximum likelihood estimate** for $\\pi$, the probability that an egg hatches after being sprayed with the pesticide.\n\nFrom the [Probability Formula Sheet](https://gla-my.sharepoint.com/:b:/g/personal/mitchum_bock_glasgow_ac_uk/EYMw7JaKJPhJqtx7U2y8014BpMoLnJ1iyb-ELxDb8hvGYg?e=BQm80L){target=\"_blank\"} we see that the Bernoulli distribution has a probability distribution function (pdf) given by,\n\n$$\nP(X=x)=\\pi^x(1-\\pi)^{(1-x)}\n$$\n\nWhen $n$ samples are taken and the values $x_1, x_2, \\ldots, x_n$ are observed (with each being either zero or one) we can write the likelihood function as,\n\n$$\nL(\\pi|\\mathbb{x})=\\prod_{i=1}^n\\pi^{x_i}(1-\\pi)^{1-x_i}\n$$ {#eq-like}\n\nIt will be easier to maximise the natural logarithm of the likelihood. Taking the natural logarithm of the likelihood function gives the log-likelihood function,\n\n$$\n\\begin{align}\n\\ln L(\\pi|\\mathbb{x})&=\\ln\\left[\\prod_{i=1}^n\\pi^{x_i}(1-\\pi)^{1-x_i}\\right]\\\\\n&=\\sum_{i=1}^n\\ln\\left[\\pi^x_i(1-\\pi)^{1-x_i}\\right]\\\\\n&=\\sum_{i=1}^n\\left[x_i\\ln\\pi+(1-x_i)\\ln(1-\\pi)\\right]\\\\\n&=\\ln\\pi\\sum_{i=1}^nx_i+\\ln(1-\\pi)\\sum_{i=1}^n(1-x_i)\n\\end{align}\n$$ {#eq-loglike}\n\nThe value that maximizes of this function will be our **maximum likelihood estimate**.\n\nUsing the following code and the data stored within the variable `eggs` as the various $x_i$ values, create a function in R called `loglike` to calculate the value of the above log-likelihood ([ -@eq-loglike]), for a given value of $\\pi$.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nloglike <- function(pi){\n  log(pi)*sum(eggs) + log(1 - pi)*sum(1 - eggs)\n  }\n```\n:::\n\n:::\n\nUsing this new R function `loglike`, plot the log-likelihood ([ -@eq-loglike]), to see where the maximum value roughly lies using `ggplot2` as follows:\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\n\nggplot(data.frame(x = c(0, 1)), aes(x = x)) +\n  stat_function(fun = loglike, n = 200) +\n  labs(x = expression(pi),\n       y = \"log-likelihood\")\n```\n:::\n\n\n## Plots\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n:::\n\nThe code first creates a data frame which contains the range of values for $\\pi$, $\\left[0, 1\\right]$, that we want to plot over. It then uses the layer `stat_function()` to calculate the value of the log-likelihood function ([ -@eq-loglike]) at 200 different points between 0 and 1. These values are automatically displayed as a line by `stat_function()`.\n\nWe can see from the above plot, that the maximum value of the log-likelihood function lies somewhere between 0.10 and 0.25. We can be more accurate than this however, and continue with the maximisation problem to find the **exact value at which the log-likelihood function is maximised**.\n\nTo find the value that **maximizes** this log-likelihood function, we need to take the first order derivative of $\\ln L(\\pi|\\mathbb{x})$ with respect to $\\pi$ and set the answer equal to 0. This then gives the equation,\n\n$$\n\\begin{aligned}\n\\frac{\\partial\\ln L(\\pi|\\mathbb{x})}{\\partial\\pi}&=\\frac{\\sum_{i=1}^nx_i}{\\pi}-\\frac{\\sum_{i=1}^n(1-x_i)}{(1-\\pi)}=0\n\\end{aligned}\n$$\nthat needs to be solved. The solution to this is given by $\\pi=\\frac{\\sum_{i=1}^n}{n}=\\bar x$ (try and show this yourself).\n\nOur final step is to check that $\\pi=\\bar x$ indeed corresponds to a **maximum**. We can do this by checking that the second order derivative of the log-likelihood, with respect to $\\pi$, is negative at $\\pi=\\bar x$. That is, $\\frac{\\partial^2\\ln L(\\pi|\\mathbb{x})}{\\partial\\pi^2}<0$ when $\\pi=\\bar x$.\n\nThe second order derivative of the log-likelihood function is,\n\n$$\n\\begin{aligned}\n\\frac{\\partial^2\\ln L(\\pi|\\mathbb{x})}{\\partial\\pi^2}&=\\frac{-\\sum_{i=1}^nx_i}{\\pi^2}-\\frac{n-\\sum_{i=1}^nx_i}{(1-\\pi)^2}\n\\end{aligned}\n$$\nThe value of the second order derivative at $\\pi=\\bar x$ is then,\n\n$$\n\\begin{aligned}\n\\frac{\\partial^2\\ln L(\\pi|\\mathbb{x})}{\\partial\\pi^2}&=\\frac{-\\sum_{i=1}^nx_i}{\\bar x^2}-\\frac{n-\\sum_{i=1}^nx_i}{(1-\\bar x)^2}\\\\\n&=\\frac{-n\\bar x}{\\bar x^2}-\\frac{n-n\\bar x}{(1-\\bar x)^2}\\\\\n&=\\frac{-n}{\\bar x}-\\frac{n(1-\\bar x)}{(1-\\bar x)^2}\\\\\n&=\\frac{-n}{\\bar x}-\\frac{n}{(1-\\bar x)}\\\\\n&=\\frac{-n}{\\bar x(1-\\bar x)}\n\\end{aligned}\n$$\nwhich is less than 0 since $0\\leq\\bar x\\leq1$ and $n>0$. Since the values of the *likelihood* function ([ -@eq-like]) at the boundaries of the parameter space (i.e. when $\\pi=0$ and $\\pi=1$) are both 0, that is $L(\\pi=0|\\mathbb{x})=0$ and $L(\\pi=1|\\mathbb{x})=0$, then we can say that $\\pi=\\bar x$ is the value that **maximizes** the log-likelihood function (and hence, the value that maximizes the likelihood function).\n\nWe have now shown that the **maximum likelihood estimate** is $\\hat\\pi(\\mathbb{x})=\\bar x$. We can find the mean value from `eggs` which will be our estimate for the population proportion of eggs that hatch after being sprayed with the pesticide. Calculate the mean of `eggs` using the code below and verify that it is 0.2099.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(eggs)\n```\n:::\n\n\n## Output\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.2098765\n```\n\n\n:::\n:::\n\n:::\n\nAdd this value to the plot we made above, to show visually that this is indeed the maximum value. To do this, the code for the plot is exactly the same as above, but now the layer `geom_vline()` has been used to add a `\"dashed\"` vertical line at 0.2099.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data.frame(x = c(0, 1)), aes(x = x)) +\n  stat_function(fun = loglike, n = 200) +\n  labs(x = expression(pi),\n       y = \"log-likelihood\") +\n  geom_vline(xintercept = mean(eggs), lty = \"dashed\")\n```\n:::\n\n\n## Plots\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n:::\n\nAfter having defined the function `loglike`, which calculates the value of the log-likelihood of a Bernoulli distribution at a given value of $\\pi$, we could use the R function `optimize()` to find the maximum of the function. The arguments that `optimize()` can take are,\n\n* `f =`: the function for which the maximum (or minimum) value should be found.\n* `interval =`: the interval across which the maximum (or minimum) value should be found.\n* `maximum =`: a `TRUE` or `FALSE` statement indicating whether the maximum or minimum should be found. By default, the minimum value will be found.\n\nFind the value of the maximum likelihood estimator for the proportion of cockroach eggs which hatch after being sprayed with the pesticide as follows:\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\noptimize(f = loglike, interval = c(0, 1), maximum = TRUE)\n```\n:::\n\n\n## Output\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n$maximum\n[1] 0.2098906\n\n$objective\n[1] -41.61724\n```\n\n\n:::\n:::\n\n:::\n\nHere, we have set `interval =` to be the range $[0,1]$, because $\\pi$ is a probability so it has to lie in the range $[0,1]$. `optimize()` returns two values; `maximum` which is the value of $\\pi$ which maximises the log-likelihood function, and `objective` which is the value of the log-likelihood function at this value of $\\pi$.\n\nNote that the value of `maximum` returned here, 0.2099, is in agreement with the maximum likelihood estimate we found above ($\\hat\\pi(\\mathbb{x})=\\bar x=0.2099$).\n\nAnother function we could have used to solve this problem is the `nlm()` function. This will only search for the **minimum** of a function (not a maximum), so in order to use it to find the maximum of the log-likelihood function, we should input the negative of the log-likelihood. We can create this in a new function called `negloglike` as follows. Note that this makes use of our predefined function, `loglike`.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nnegloglike <- function(pi){\n  (-1)*loglike(pi)\n}\n```\n:::\n\n:::\n\nNow we are ready to use the `nlm()` function. The arguments this can take are,\n\n* `f =`: this is the function for which the minimum value should be found.\n* `p =`: this is the starting parameter value to use to find the minimum. `nlm()` will work iteratively to find the minimum of the function.\n\nFind the minimum of `negloglike` as follows:\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nnlm(f = negloglike, p = 0.2)\n```\n:::\n\n\n## Output\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n$minimum\n[1] 41.61724\n\n$estimate\n[1] 0.209876\n\n$gradient\n[1] 1.421085e-08\n\n$code\n[1] 1\n\n$iterations\n[1] 4\n```\n\n\n:::\n:::\n\n:::\n\nThe value we are interested in here is `estimate` which we can extract.\n\n::: panel-tabset\n## R Code\n\n::: {.cell}\n\n```{.r .cell-code}\nnlm(f = negloglike, p = 0.2)$estimate\n```\n:::\n\n\n## Output\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0.209876\n```\n\n\n:::\n:::\n\n:::\n\nAgain, this value is in agreement with the $\\bar x=0.2099$ being the **maximum likelihood estimate**. Note that `nlm()` has identified 0.2099 as being the value of $\\pi$ which *minimises* the *negative* of the log-likelihood, but this is equivalent to it being the value which *maximises* the log-likelihood.\n\n\n---\n\nYou can find more examples of finding maximum likelihood estimators, both 'by hand' and using R in [Section 7.3.2 Likelihood and Maximum Likelihood Estimators](https://read.kortext.com/reader/pdf/92741/419){target=\"_blank\"} of *Probability and Statistics with R*.\n\n\n\n\n\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}